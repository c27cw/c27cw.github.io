function e(e){return new Promise(((t,n)=>{e.oncomplete=e.onsuccess=()=>t(e.result),e.onabort=e.onerror=()=>n(e.error)}))}function t(t,n){const r=function(){if(navigator.userAgentData||!/Safari\//.test(navigator.userAgent)||/Chrom(e|ium)\//.test(navigator.userAgent)||!indexedDB.databases)return Promise.resolve();let e;return new Promise((t=>{const n=()=>indexedDB.databases().finally(t);e=setInterval(n,100),n()})).finally((()=>clearInterval(e)))}().then((()=>{const r=indexedDB.open(t);return r.onupgradeneeded=()=>r.result.createObjectStore(n),e(r)}));return(e,t)=>r.then((r=>t(r.transaction(n,e).objectStore(n))))}let n;function r(){return n||(n=t("keyval-store","keyval")),n}function a(t,n=r()){return n("readonly",(n=>e(n.get(t))))}function o(t,n,a=r()){return a("readwrite",(r=>(r.put(n,t),e(r.transaction))))}function s(t,n=r()){return n("readwrite",(n=>(t.forEach((e=>n.put(e[1],e[0]))),e(n.transaction))))}function i(t,n=r()){return n("readwrite",(n=>(n.delete(t),e(n.transaction))))}export{o as a,t as c,i as d,a as g,s};
//# sourceMappingURL=index.807Chkmn.chunk.js.map
